name: Build and Push Docker Image to GCR

on:
  pull_request_target:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@4.0.0
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Login to GitHub Container Registry
        uses: docker/login-action@3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@3.10.0

      - name: Build and push
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        uses: docker/build-push-action@6.18.0
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'platform-engineering-org/akka' }}
          tags: ghcr.io/${{ github.repository_owner }}/akka:latest
          platforms: linux/amd64,linux/arm64/v8

      - name: Build for scanning
        if: github.event_name == 'pull_request_target'
        uses: docker/build-push-action@6.18.0
        with:
          context: .
          load: true
          push: false
          tags: akka:pr-${{ github.event.pull_request.number }}
          platforms: linux/amd64

      - run: docker images

      - name: Scan image for vulnerabilities
        if: github.event_name == 'pull_request_target'
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: akka:pr-${{ github.event.pull_request.number }}
          format: table
          output: trivy-results.txt
          exit-code: 0
          ignore-unfixed: false
          severity: CRITICAL,HIGH

      - name: Read scan results into output
        if: github.event_name == 'pull_request_target'
        id: read-scan
        run: |
          echo "scan_output<<EOF" >> $GITHUB_OUTPUT
          cat trivy-results.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get comment ID
        if: github.event_name == 'pull_request_target'
        id: get-comment
        uses: peter-evans/find-comment@v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '### ðŸ”’ Trivy Scan Results for `akka:pr-${{ github.event.pull_request.number }}`'

      - name: Post Trivy scan result as PR comment
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### ðŸ”’ Trivy Scan Results for `akka:pr-${{ github.event.pull_request.number }}`
            ```
            ${{ steps.read-scan.outputs.scan_output }}
            ```
